<?xml version="1.0" encoding="UTF-8"?>
<project name="com.google.checkout.sdk.nbmodule" default="netbeans" basedir=".">
    <description>Builds, tests, and runs the project com.google.checkout.sdk.nbmodule.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <property file="build.properties"/>
    <property file="../sdk/sdk.properties"/>

    <property name="build.dir" value="build"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="sdk.dir.name" value="checkout-sdk-${release.version}"/>
    <property name="checkout-sdk.home" value="../sdk/build/tmpdist/${sdk.dir.name}"/>
    <property name="checkout-sdk-zip" value="${sdk.dir.name}.zip"/>
    <property name="checkout-sdk-dir" value="${build.dir}/${sdk.dir.name}"/>
   
    <target name="copy-checkout-sdk">
      <copy todir=".">
        <fileset dir="../sdk/dist/">
          <include name="${checkout-sdk-zip}"/>
        </fileset>
      </copy>
    </target>

    <target name="check-sdk-zip-present" depends="copy-checkout-sdk">
      <available file="${sdk.dir.name}.zip" property="checkout-sdk-zip.exists"/>
      <fail unless="checkout-sdk-zip.exists" 
          message="${checkout-sdk-zip} does not exist under the root directory (nbmodule/)"/>
    </target>
 
    <target name="setup" depends="init,check-sdk-zip-present">
      <echo> 
You will need to run setup target manually before building the nbmodule project, 
or everytime after running the clean target.
      </echo>
      <mkdir dir="${build.classes.dir}/resources"/>
      <unzip src="${checkout-sdk-zip}" dest="${build.dir}"/>
      <jar basedir="${checkout-sdk-dir}/web/checkout"
           jarfile="${build.classes.dir}/resources/samples.jar"/>
      <copy todir="src/resources">
        <fileset dir="../module/src/resources/">
          <include name="checkout-config.xml"/>
          <include name="EmptyHandler.txt"/>
          <include name="webFragment.xml"/>
        </fileset>
      </copy>
    </target>
    <target name="all" depends="setup"/>
</project>
